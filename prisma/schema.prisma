generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  
  name      String?
  phone     String   @unique
  role      Boolean  @default(false)
  isActive  Boolean  @default(false) @map("is_active")

  cart      Cart[]
  code      Code?
  posts     Post[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Code {
  id        String   @id @default(cuid())

  code      Int
  userId    String   @unique @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  expiresAt DateTime @map("expires_at")

  @@map("codes")
}

model Cart {
  id        String    @id @default(cuid())

  userId    String    @map("user_id")
  productId String    @map("product_id")
  count     Int

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product   @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("carts")
}

model Post {
  id        String   @id @default(cuid())

  title     String
  content   String
  views     Int      @default(0)
  userId    String?  @map("user_id")
  user      User?    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("posts")
}

model Brand {
  id        String     @id @default(cuid())

  name      String
  products  Product[]
  discounts Discount[]

  @@map("brands")
}

model Device {
  id        String     @id @default(cuid())

  name      String
  products  Product[]
  discounts Discount[]

  @@map("devices")
}

model Discount {
  id         String           @id @default(cuid())

  dateBegin  DateTime?        @map("date_begin")
  dateEnd    DateTime?        @map("date_end")
  percent    String

  categoryId String?          @map("category_id")
  deviceId   String?          @map("device_id")
  brandId    String?          @map("brand_id")
  modelId    String?          @map("model_id")

  categories ProductCategory? @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  devices    Device?          @relation(fields: [deviceId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  brands     Brand?           @relation(fields: [brandId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  models     Model?           @relation(fields: [modelId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("discounts")
}

model Model {
  id        String     @id @default(cuid())

  name      String
  products  Product[]
  discounts Discount[]

  @@map("models")
}

model ProductCategory {
  id        String     @id @default(cuid())

  name      String
  products  Product[]
  discounts Discount[]

  @@map("product_categories")
}

model Product {
  id         String           @id @default(cuid())

  name       String
  price      Decimal          @db.Decimal(10,2)
  count      Int
  barcodes   String
  image      Bytes?
  cart       Cart[]

  categoryId String?          @map("category_id")
  deviceId   String?          @map("device_id")
  brandId    String?          @map("brand_id")
  modelId    String?          @map("model_id")

  category   ProductCategory? @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  device     Device?          @relation(fields: [deviceId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  brand      Brand?           @relation(fields: [brandId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  model      Model?           @relation(fields: [modelId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("products")
}
